{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/junkibeom/Documents/GitHub/studying/LayoutProps/screens/Layout.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Constants from 'expo-constants';\nimport { color } from 'react-native-reanimated';\n\nvar Layout = function Layout(props) {\n  var navigation = props.navigation;\n  var flexDirections = ['row', 'row-reverse', 'column', 'column-reverse'];\n  var justifyContents = ['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly'];\n  var alignItemsArr = ['flex-start', 'flex-end', 'center', 'stretch', 'baseline'];\n  var wraps = ['nowrap', 'wrap', 'wrap-reverse'];\n  var directions = ['inherit', 'ltr', 'rtl'];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      flexDirection = _useState2[0],\n      setFlexDirection = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      justifyContent = _useState4[0],\n      setjustifyContent = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      alignItems = _useState6[0],\n      setAlignItems = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      direction = _useState8[0],\n      setdirection = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      wrap = _useState10[0],\n      setwrap = _useState10[1];\n\n  var hookedStyles = {\n    flexDirection: flexDirections[flexDirection],\n    justifyContent: justifyContents[justifyContent],\n    alignItems: alignItemsArr[alignItems],\n    direction: directions[direction],\n    flexWrap: wraps[wrap]\n  };\n  var p;\n\n  var changeSetting = function changeSetting(value, options, setterFunction) {\n    if (value == options.length - 1) {\n      setterFunction(0);\n      p = options[value];\n    } else {\n      setterFunction(value + 1);\n      p = options[value];\n    }\n\n    console.log(p);\n  };\n\n  var Square = function Square() {\n    var sqStyle = {\n      width: 50,\n      height: 50,\n      backgroundColor: randomHexColor()\n    };\n    return React.createElement(View, {\n      style: sqStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var _useState11 = useState([Square(), Square(), Square()]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      squares = _useState12[0],\n      setSquares = _useState12[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      paddingTop: Constants.statusBarHeight\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.container, styles.playingSpacem, hookedStyles],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, squares.map(function (elem) {\n    return elem;\n  })), React.createElement(ScrollView, {\n    style: [styles.container],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.controlSpace],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"CHANGE FLEX DIRECTION\",\n    onPress: function onPress() {\n      return changeSetting(flexDirection, flexDirections, setFlexDirection);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: '#000000'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, p)), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"CHANGE JUSTIFY CONTENT\",\n    onPress: function onPress() {\n      return changeSetting(justifyContent, justifyContents, setjustifyContent);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"CHANGE ALIGN ITEMS\",\n    onPress: function onPress() {\n      return changeSetting(alignItems, alignItemsArr, setAlignItems);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"CHANGE DIRECTION\",\n    onPress: function onPress() {\n      return changeSetting(direction, directions, setdirection);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"CHANGE FLEX WRAP\",\n    onPress: function onPress() {\n      return changeSetting(wrap, wraps, setwrap);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"ADD SQUARE\",\n    onPress: function onPress() {\n      return setSquares([].concat(_toConsumableArray(squares), [Square()]));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"DELETE SQUARE\",\n    onPress: function onPress() {\n      return setSquares(squares.filter(function (v, i) {\n        return i != squares.length - 1;\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"Go To Home\",\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: '50%'\n  },\n  playingSpace: {\n    backgroundColor: 'white',\n    borderColor: 'blue',\n    borderWidth: 3\n  },\n  controlSpace: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    backgroundColor: '#F5F5F5'\n  },\n  buttonView: {\n    width: '50%',\n    padding: 10\n  }\n});\n\nvar randomHexColor = function randomHexColor() {\n  return '#000000'.replace(/0/g, function () {\n    return (~~(Math.random() * 16)).toString(16);\n  });\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/junkibeom/Documents/GitHub/studying/LayoutProps/screens/Layout.js"],"names":["React","useState","Constants","color","Layout","props","navigation","flexDirections","justifyContents","alignItemsArr","wraps","directions","flexDirection","setFlexDirection","justifyContent","setjustifyContent","alignItems","setAlignItems","direction","setdirection","wrap","setwrap","hookedStyles","flexWrap","p","changeSetting","value","options","setterFunction","length","console","log","Square","sqStyle","width","height","backgroundColor","randomHexColor","squares","setSquares","paddingTop","statusBarHeight","styles","container","playingSpacem","map","elem","controlSpace","buttonView","filter","v","i","navigate","StyleSheet","create","playingSpace","borderColor","borderWidth","padding","replace","Math","random","toString"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'; //자바스크립트 버전에 따라 리액트 라이브러리에 진입\r\nimport {Text, Button, View, StyleSheet, ScrollView} from 'react-native'; //리액트 네이티브 사용\r\nimport Constants from 'expo-constants';\r\nimport { color } from 'react-native-reanimated';\r\n\r\nconst Layout = (props) => {\r\n  const {navigation} = props;\r\n\r\n  const flexDirections = ['row','row-reverse','column','column-reverse'];\r\n  const justifyContents = [\r\n    'flex-start',\r\n    'flex-end',\r\n    'center',\r\n    'space-between',\r\n    'space-around',\r\n    'space-evenly',\r\n  ];\r\n  const alignItemsArr = [\r\n    'flex-start',\r\n    'flex-end',\r\n    'center',\r\n    'stretch',\r\n    'baseline',\r\n  ];\r\n  const wraps = ['nowrap','wrap','wrap-reverse'];\r\n  const directions = ['inherit','ltr','rtl'];\r\n\r\n  const [flexDirection, setFlexDirection] = useState(0);\r\n  const [justifyContent, setjustifyContent] = useState(0);\r\n  const [alignItems, setAlignItems] = useState(0);\r\n  const [direction, setdirection] = useState(0);\r\n  const [wrap, setwrap] = useState(0);\r\n\r\nconst hookedStyles = {\r\n    flexDirection: flexDirections[flexDirection],\r\n    justifyContent: justifyContents[justifyContent],\r\n    alignItems: alignItemsArr[alignItems],\r\n    direction: directions[direction],\r\n    flexWrap: wraps[wrap],\r\n  };\r\n//추가\r\n  var p;\r\n\r\n  const changeSetting = (value, options, setterFunction) => {\r\n    if (value == options.length - 1) {\r\n      setterFunction(0);\r\n      p = options[value]; //추가\r\n    } else {\r\n          setterFunction(value + 1); \r\n          p = options[value]; //추가\r\n    }\r\n    console.log(p);\r\n  };\r\n\r\n  const Square = () => {\r\n    const sqStyle = {\r\n      width: 50,\r\n      height: 50,\r\n      backgroundColor: randomHexColor(),\r\n    };\r\n    return <View style={sqStyle} />;\r\n  };\r\n\r\n  const [squares, setSquares] = useState([Square(), Square(), Square()]);\r\n\r\n  return (\r\n    <>\r\n      <View style={{ paddingTop: Constants.statusBarHeight}} />\r\n      <View style={[styles.container, styles.playingSpacem, hookedStyles]}>\r\n        {squares.map(elem => elem)}\r\n        \r\n      </View>\r\n      <ScrollView style={[styles.container]}>\r\n        <View style={[styles.controlSpace]}>\r\n          <View style={styles.buttonView}>            \r\n            <Button title=\"CHANGE FLEX DIRECTION\"\r\n              onPress={() => \r\n                changeSetting(flexDirection, flexDirections, setFlexDirection)\r\n            }/>\r\n            <Text style={{color: '#000000'}}>{p}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.buttonView}>            \r\n            <Button title=\"CHANGE JUSTIFY CONTENT\"\r\n            onPress={() => changeSetting(justifyContent,justifyContents,setjustifyContent)\r\n          }\r\n            />\r\n          </View>\r\n          <View style={styles.buttonView}>\r\n            <Button title=\"CHANGE ALIGN ITEMS\"\r\n            onPress={() => changeSetting(alignItems, alignItemsArr, setAlignItems)\r\n            }\r\n            />\r\n          </View>\r\n          <View style={styles.buttonView}>\r\n            <Button title=\"CHANGE DIRECTION\"\r\n            onPress={() => \r\n              changeSetting(direction, directions, setdirection)\r\n            }\r\n            />\r\n          </View>\r\n          <View style={styles.buttonView}>\r\n            <Button title=\"CHANGE FLEX WRAP\"\r\n            onPress={() => \r\n              changeSetting(wrap, wraps, setwrap)\r\n            }\r\n            />\r\n          </View>\r\n          <View style={styles.buttonView}>\r\n            <Button title=\"ADD SQUARE\"\r\n            onPress={() => \r\n              setSquares([...squares, Square()])\r\n            }\r\n            />\r\n          </View>\r\n          <View style={styles.buttonView}>\r\n            <Button title=\"DELETE SQUARE\"\r\n            onPress={() => \r\n              setSquares(squares.filter((v, i) => i != squares.length-1)) /// 뒤에서 부터 지우기\r\n              // i != 0 은 앞에서 부터 지우기\r\n            }\r\n            />\r\n          </View>\r\n          <View style={styles.buttonView}>\r\n            <Button title=\"Go To Home\"\r\n            onPress={() => \r\n              navigation.navigate('Home')\r\n            }\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n      </ScrollView>\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: '50%',\r\n  },\r\n  playingSpace: {\r\n    backgroundColor: 'white',\r\n    borderColor: 'blue',\r\n    borderWidth: 3,\r\n  },\r\n  controlSpace: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    backgroundColor: '#F5F5F5',\r\n\r\n  },\r\n  buttonView: {\r\n    width: '50%',\r\n    padding: 10,\r\n  }\r\n})\r\n\r\nconst randomHexColor = () => {\r\n  return '#000000'.replace(/0/g, () => {\r\n    return (~~(Math.random() * 16)).toString(16);\r\n  });\r\n};\r\n\r\nexport default Layout;"]},"metadata":{},"sourceType":"module"}